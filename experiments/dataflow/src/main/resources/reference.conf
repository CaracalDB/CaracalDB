caracal {    
    bootThreshold = 3 // nodes
    heartbeatInterval = "5s"
    maintenancePolicy = "default" // either 'default' or a fully qualified class name that implements se.sics.caracaldb.global.MaintenancePolicy
    scatterWidth = 2 // see paper "Copysets: Reducing the Frequency of Data Loss in Cloud Storage" for an explanation
    schemaIdAlgo = "MD5" // name of the hash to get schema IDs from schema names (http://docs.oracle.com/javase/6/docs/technotes/guides/security/StandardNames.html#MessageDigest)
    schemaFiles = [] // add paths to schema files (*.schema.json) if you need extras
    stats {
        nodeInterval = "10s"
    }
    fd {
        minRto = "1000ms"
        livePingInterval = "500ms"
        deadPingInterval = "5000ms"
        timeoutIncrement = "50ms"
    }
    network {
//        messageBufferSizeMax = "16K"
//        messageBufferSize = "2K"
//        dataMessageSize = "2K"
        keepAlivePeriod = "1000ms"
    }
    database {
        types {
            memory = "se.sics.caracaldb.persistence.memory.InMemoryDB"
            leveldb = "se.sics.caracaldb.persistence.disk.LevelDBJNI"
            master = "se.sics.caracaldb.persistence.memory.MasterDB"
        }
        pathHead = "./persistence"
    }
}

leveldb {
    path = ${caracal.database.pathHead}"/leveldb/"
    cache = "100M"
}

server {
    address {
        hostname = "127.0.0.1"
        port = 45678
    }
}

bootstrap {
    address {
        hostname = "127.0.0.1"
        port = 45678
    }
}